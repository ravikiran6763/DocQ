if (!loadCredentials(uname1,pw1))
{
     Log.d("VSeeExample", "Login credentials not set!");
}

VSeeChatManager chatManager = VSeeChatManager.instance();
chatManager.setDisplayHomeAsUpEnabled(true);

// setupLoginStateReceiver();






//    VSeeChatManager.instance().addReceiver(new VSeeChatManager.SimpleVSeeChatManagerReceiver()
//    {
//
//        @Override
//        public void onAddChat(VSeeChat chat, boolean isFirst)
//        {
//            //doToast("onAddChat");
//        }
//
//        @Override
//        public void onRemoveChat(VSeeChat chat, boolean isLast)
//        {
//            //doToast("onRemoveChat");
//        }
//
//        @Override
//        public void onUpdateChat(VSeeChat chat)
//        {
//            //doToast("onUpdateChat");
//        }
//
//        // onParticipant is only called for group chat or in-call chat
//        @Override
//        public void onAddParticipant(VSeeChat chat, VSeeContact participant)
//        {
//            //doToast("onAddParticipant");
//        }
//
//        // onRemoveParticipant is only called for group chat or in-call chat
//        @Override
//        public void onRemoveParticipant(VSeeChat chat, VSeeContact participant)
//        {
//            //doToast("onRemoveParticipant");
//        }
//
//    });
//
// VSeeVideoManager videoManager = VSeeVideoManager.instance();
//  videoManager.setTitle(cordova.getActivity().getString(R.string.video_title));
//   videoManager.setDialingViewVisible(false);

 // VSeeVideoManager.instance().addReceiver(new VSeeVideoManager.SimpleVSeeVideoManagerReceiver()
 // {
 //
 //     String videoCounts()
 //     {
 //         return String.format("[num windows: %d, num minimized: %d, num active users: %d]",
 //                 VSeeVideoManager.instance().getNumVideoViews(),
 //                 VSeeVideoManager.instance().getNumMinimizedVideoViews(),
 //                 VSeeVideoManager.instance().getNumActiveUsers());
 //     }
 //
 //
 //     @Override
 //     public void onShowRemoteVideoView(String username, boolean isFirst)
 //     {
 //
 //         if (isFirst)
 //         {
 //             cordova.getActivity().getApplicationContext().startActivity(VSeeVideoManager.instance().getVideoLaunchIntent());
 //
 //         }
 //       }
 //
 //     @Override
 //     public void onAppShareChange(boolean isActive)
 //     {
 //         Log.d("VSeeExample", String.format("app share change (open or close).  App share %s active now.  %s", isActive ? "is" : "is not", videoCounts()));
 //     }
 //
 //     @Override
 //     public void onRemoveRemoteVideoView(String username, boolean isLast)
 //     {
 //          Log.d("VSeeExample", String.format("close %s video view for %s %s", isLast ? "last" : "a", username, videoCounts()));
 //          if (isLast)
 //          {
 //              VSeeVideoManager.instance().finishVideoActivity();
 //          }
 //     }
 //
 // });



 //
 // VSeeServerConnection.instance().addReceiver(new VSeeServerConnection.SimpleVSeeServerConnectionReceiver() {
 //
 //     @Override
 //     public void onNewStatusMessage(String message)
 //     {
 //
 //         if (message.toLowerCase().contains("password"))
 //         {
 //             stopUpdatingStatus = true;
 //
 //          }
 //     }
 //
 //     @Override
 //     public void onLoginStateChange(VSeeServerConnection.LoginState newState)
 //     {
 //
 //          if (newState == VSeeServerConnection.LoginState.LOGGED_IN)
 //          {
 //              loginstatus = "loggedin";
 //              PluginResult result = new PluginResult(PluginResult.Status.OK,loginstatus);
 //              callbackContext.sendPluginResult(result);
 //              VSeeServerConnection.instance().setAutoAccept(true);
 //
 //              removeLoginStateReceiver();
 //
 //         updateLoginState(newState);
 //     }
 //   }
 //
 // });





           //           VSeeNotificationCenter.instance().customizeCallForegroundNotification(R.drawable.notification, "In Call Title",
           //           R.drawable.notification, "End Call Title");
           //
           //           VSeeNotificationCenter.instance().addReceiver(new VSeeNotificationCenter.VSeeNotificationCenterReceiver() {
           //
           //           @Override
           //           public void doNotification(int id, NotificationCompat.Builder builder, VSeeNotificationType type)
           //           {
           //             handleDoNotification(id, builder);
           //
           //           }
           //           @Override
           //           public void clearNotification(int id)
           //           {
           //             handleClearNotification(id);
           //
           //           }
           //
           //           @Override
           //           public void clearAllNotifications()
           //           {
           //               handleClearAllNotification();
           //           }
           //       });
           //
           //       VSeeNotificationCenter.instance().addDialingReceiver(new VSeeNotificationCenter.VSeeDialingReceiver() {
           //         @Override
           //         public void onChangeDialingStatus(VSeeNotificationCenter.VSeeDialingStatus status, String message, String accountName, String displayName) {
           //
           //         }
           //         @Override
           //         public void onCancelDialing() {
           //         }
           //         });
           //     }
           // });





             // private void setupLoginStateReceiver() {
             //     VSeeServerConnection.instance().addReceiver(receiver);
             // }
             //
             //
             // private void removeLoginStateReceiver() {
             //     VSeeServerConnection.instance().removeReceiver(receiver);
             // }


                             // Customize with different defaults and icons
                             // private  void handleDoNotification(int id, NotificationCompat.Builder builder)
                             // {
                             //   Context context = MyApplication.instance();
                             //   int defaults = Notification.DEFAULT_LIGHTS | Notification.DEFAULT_VIBRATE | Notification.DEFAULT_SOUND;
                             //   builder.setDefaults(defaults);
                             //   builder.setSmallIcon(R.drawable.notification);
                             //   NotificationManagerCompat manager = NotificationManagerCompat.from(context);
                             //   manager.notify(id, builder.build());
                             // }
                             //
                             //   private  void handleClearNotification(int id)
                             //   {
                             //       Context context = MyApplication.instance();
                             //        NotificationManagerCompat manager = NotificationManagerCompat.from(context);
                             //       manager.cancel(id);
                             //
                             //   }
                             //
                             //   private  void handleClearAllNotification()
                             //   {
                             //
                             //         Context context = MyApplication.instance();
                             //         NotificationManagerCompat manager = NotificationManagerCompat.from(context);
                             //         manager.cancelAll();
                             //     }


               //               private void updateLoginState(VSeeServerConnection.LoginState loginState) {
               //     // loginStateTV.setText(String.format("Login state: %s", loginState.toString()));
               //     if (mLoginState.equals(VSeeServerConnection.LoginState.TRY_LOGOUT)
               //             && loginState.equals(VSeeServerConnection.LoginState.IDLE)) {
               //
               //     }
               //     else {
               //         mLoginState = loginState;
               //     }
               // }




               // private void updateLoginState(VSeeServerConnection.LoginState loginState)
               // {
               //     if (stopUpdatingStatus)
               //     {
               //         return;
               //     }
               //      boolean loggedIn = loginState == VSeeServerConnection.LoginState.LOGGED_IN;
               //      if (loggedIn)
               //      {
               //
               //        Log.d("USERLOGGEDIN","LOGGED_IN");
               //
               //
               //      }
               //  }
